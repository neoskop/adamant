{"version":3,"file":"neoskop-adamant.umd.js.map","sources":["node_modules/tslib/tslib.es6.js","ng://@neoskop/adamant/utils/metadata.ts","ng://@neoskop/adamant/annotations/property.ts","ng://@neoskop/adamant/annotations/relation.ts","ng://@neoskop/adamant/annotations/belongs-to.ts","ng://@neoskop/adamant/annotations/design-doc.ts","ng://@neoskop/adamant/annotations/entity.ts","ng://@neoskop/adamant/annotations/filter.ts","ng://@neoskop/adamant/annotations/has-many.ts","ng://@neoskop/adamant/annotations/has-many-map.ts","ng://@neoskop/adamant/annotations/id.ts","ng://@neoskop/adamant/annotations/inline.ts","ng://@neoskop/adamant/annotations/inline-entity.ts","ng://@neoskop/adamant/annotations/validate-doc.ts","ng://@neoskop/adamant/annotations/view.ts","ng://@neoskop/adamant/hydrator.ts","ng://@neoskop/adamant/validator.ts","ng://@neoskop/adamant/injector-tokens.ts","ng://@neoskop/adamant/utils/marks.ts","ng://@neoskop/adamant/metadata.ts","ng://@neoskop/adamant/bulk.ts","ng://@neoskop/adamant/utils/defer.ts","ng://@neoskop/adamant/read-query-batcher.ts","ng://@neoskop/adamant/query-builder.ts","ng://@neoskop/adamant/repository.ts","ng://@neoskop/adamant/hydrator-impl.ts","ng://@neoskop/adamant/validator-impl.ts","ng://@neoskop/adamant/connection-manager.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import 'reflect-metadata';\n\nexport type Ctor<T> = Function | { new(...args : any[]) : T; prototype: T };\n\nexport const CLASS_METADATA = new WeakMap<Ctor<any>, any[]>();\nexport const PROPERTY_METADATA = new WeakMap<Ctor<any>, Map<string|symbol, any[]>>();\n\nexport function getClassMetadata<T = any>(target : Ctor<any>, type? : Ctor<T>) : T[] {\n    if(!CLASS_METADATA.has(target)) {\n        return [];\n    }\n    \n    return CLASS_METADATA.get(target)!.filter(a => !type || a instanceof type);\n}\n\nexport function pushClassMetadata(target : Ctor<any>, metadata : any) {\n    if(!CLASS_METADATA.has(target)) {\n        CLASS_METADATA.set(target, []);\n    }\n    CLASS_METADATA.get(target)!.push(metadata);\n}\n\nexport function getPropertyMetadata<T = any>(target : any, property: string | symbol, type? : Ctor<any>) : T[] {\n    if(!PROPERTY_METADATA.has(target) || !PROPERTY_METADATA.get(target)!.has(property)) {\n        return [];\n    }\n    \n    return PROPERTY_METADATA.get(target)!.get(property)!.filter(a => !type || a instanceof type);\n}\n\nexport function getAllPropertyMetadata<T = any>(target : any) : Map<string|symbol, T[]> {\n    if(!PROPERTY_METADATA.has(target)) {\n        return new Map();\n    }\n    \n    return PROPERTY_METADATA.get(target)!;\n}\n\nexport function pushPropertyMetadata(target : any, property : string | symbol, metadata : any) {\n    if(!PROPERTY_METADATA.has(target)) {\n        PROPERTY_METADATA.set(target, new Map());\n    }\n    \n    if(!PROPERTY_METADATA.get(target)!.has(property)) {\n        PROPERTY_METADATA.get(target)!.set(property, []);\n    }\n    \n    PROPERTY_METADATA.get(target)!.get(property)!.push(metadata);\n}\n\nexport function populate<T>(target : T, source : Partial<T>) : T {\n    for(const key of Object.keys(source) as (keyof T)[]) {\n        target[key] = source[key] as T[keyof T];\n    }\n    \n    return target;\n}\n","import { Ctor, populate, pushPropertyMetadata } from '../utils/metadata';\n\nexport type Type = typeof Boolean | typeof String | typeof Number | typeof Object | typeof Date | Ctor<any>;\n\nexport class PropertyMetadata {\n    type!: Type;\n    required!: boolean;\n    default?: any;\n    \n    validate(value : any, key : string | symbol) {\n        if(this.required && null == value) {\n            throw new Error(`Property \"${typeof key === 'symbol' ? Symbol.keyFor(key) : key}\" required`);\n        }\n    }\n}\n\nexport function Property(options: { type?: Type, required?: boolean, default?: any } = {}) : PropertyDecorator {\n    return (target: Object, property: string | symbol) => {\n        pushPropertyMetadata(target.constructor, property, populate(new PropertyMetadata(), {\n            type: Reflect.getMetadata('design:type', target, property),\n            required: false,\n            ...options\n        }))\n    }\n}\n","import { resolveForwardRef } from '@angular/core';\nimport { Ctor } from '../utils/metadata';\nimport { PropertyMetadata } from './property';\n\nexport class RelationMetadata<T> extends PropertyMetadata {\n    required!: boolean;\n    default?: T;\n    // private _entity! : ForwardRefFn | Ctor<T>;\n    \n    set type(type : Ctor<T> /*| ForwardRefFn */) {\n        (this as any)._type = type;\n    }\n    get type() : Ctor<T> {\n        return resolveForwardRef((this as any)._type);\n    }\n    \n}\n","import { RelationMetadata } from './relation';\nimport { Ctor, populate, pushPropertyMetadata } from '../utils/metadata';\nimport { ForwardRefFn } from '@angular/core';\n\nexport class BelongsToMetadata<T> extends RelationMetadata<T> {}\n\nexport function BelongsTo<T>(options: { type?: Ctor<T>|ForwardRefFn, required?: boolean, default?: T } = {}) : PropertyDecorator {\n    return (target: Object, property: string | symbol) => {\n        pushPropertyMetadata(target.constructor, property, populate(new BelongsToMetadata(), {\n            type: Reflect.getMetadata('design:type', target, property),\n            required: false,\n            ...options\n        }))\n    }\n}\n","import { Ctor, populate, pushClassMetadata } from '../utils/metadata';\n\nexport class DesignDocMetadata<T> {\n    entity!: Ctor<T>;\n    name!: string;\n}\n\ndeclare global {\n    export const emit : any;\n}\n\nexport function DesignDoc<T>(entity : Ctor<T>, name: string) : ClassDecorator {\n    return (target : Function) => {\n        pushClassMetadata(target, populate(new DesignDocMetadata<T>(), {\n            entity,\n            name\n        }));\n    }\n}\n","import { Ctor, populate, pushClassMetadata } from '../utils/metadata';\nimport { Hydrator } from '../hydrator';\nimport { Validator } from '../validator';\n\nexport class EntityMetadata {\n    name!: string;\n    attachments!: boolean;\n    hydrator?: Ctor<Hydrator>;\n    validator?: Ctor<Validator>;\n}\n\nexport function Entity(name : string, options: {\n    attachments?: boolean;\n    hydrator?: Ctor<Hydrator>;\n    validator?: Ctor<Validator>;\n} = {}) : ClassDecorator {\n    return (target : Function) => {\n        pushClassMetadata(target, populate(new EntityMetadata(), {\n            name,\n            attachments: false,\n            // hydrator: HydratorImpl,\n            // validator: ValidatorImpl,\n            ...options\n        }));\n    }\n}\n","import { populate, pushPropertyMetadata } from '../utils/metadata';\n\n\nexport class FilterMetadata {}\n\nexport function Filter() : PropertyDecorator {\n    return (target: Object, property: string | symbol) => {\n        pushPropertyMetadata(target.constructor, property, populate(new FilterMetadata(), {\n        }))\n    }\n}\n","import { RelationMetadata } from './relation';\nimport { Ctor, populate, pushPropertyMetadata } from '../utils/metadata';\nimport { ForwardRefFn } from '@angular/core';\n\nexport class HasManyMetadata<T> extends RelationMetadata<T> {}\n\nexport function HasMany<T>(type: Ctor<T>|ForwardRefFn, options: { required?: boolean, default?: T } = {}) : PropertyDecorator {\n    return (target: Object, property: string | symbol) => {\n        pushPropertyMetadata(target.constructor, property, populate(new HasManyMetadata(), {\n            type,\n            required: false,\n            ...options\n        }))\n    }\n}\n","import { RelationMetadata } from './relation';\nimport { Ctor, populate, pushPropertyMetadata } from '../utils/metadata';\nimport { ForwardRefFn } from '@angular/core';\n\nexport class HasManyMapMetadata<T> extends RelationMetadata<T> {}\n\nexport function HasManyMap<T>(type: Ctor<T>|ForwardRefFn, options: { required?: boolean, default?: T } = {}) : PropertyDecorator {\n    return (target: Object, property: string | symbol) => {\n        pushPropertyMetadata(target.constructor, property, populate(new HasManyMapMetadata(), {\n            type,\n            required: false,\n            ...options\n        }))\n    }\n}\n","import { populate, pushPropertyMetadata } from '../utils/metadata';\nimport 'reflect-metadata';\nimport { PropertyMetadata, Type } from './property';\n\nexport enum IdStrategy {\n    Static = 'static',\n    // Uuid = 'uuid',\n    // Increment = 'increment'\n}\n\nexport class IdMetadata extends PropertyMetadata {\n    strategy!: IdStrategy;\n    readonly required = true;\n}\n\nexport function Id(options: { strategy?: IdStrategy, type?: Type } = {}) : PropertyDecorator {\n    return (target: Object, property: string | symbol) => {\n        pushPropertyMetadata(target.constructor, property, populate(new IdMetadata(), {\n            strategy: IdStrategy.Static,\n            type: Reflect.getMetadata('design:type', target, property),\n            ...options\n        }))\n    }\n}\n","import { RelationMetadata } from './relation';\nimport { Ctor, populate, pushPropertyMetadata } from '../utils/metadata';\nimport { ForwardRefFn } from '@angular/core';\n\nexport class InlineMetadata<T> extends RelationMetadata<T> {}\n\nexport function Inline<T>(options: { type?: Ctor<T>|ForwardRefFn, required?: boolean, default?: T } = {}) : PropertyDecorator {\n    return (target: Object, property: string | symbol) => {\n        pushPropertyMetadata(target.constructor, property, populate(new InlineMetadata(), {\n            type: Reflect.getMetadata('design:type', target, property),\n            required: false,\n            ...options\n        }))\n    }\n}\n","import { Ctor, populate, pushClassMetadata } from '../utils/metadata';\nimport { Hydrator } from '../hydrator';\nimport { Validator } from '../validator';\n\nexport class InlineEntityMetadata {\n    inline!: true;\n    hydrator?: Ctor<Hydrator>;\n    validator?: Ctor<Validator>;\n}\n\nexport function InlineEntity(options: {\n    hydrator?: Ctor<Hydrator>;\n    validator?: Ctor<Validator>;\n} = {}) : ClassDecorator {\n    return (target : Function) => {\n        pushClassMetadata(target, populate(new InlineEntityMetadata(), {\n            // hydrator: HydratorImpl,\n            // validator: ValidatorImpl,\n            ...options,\n            inline: true\n        }));\n    }\n}\n","import { populate, pushPropertyMetadata } from '../utils/metadata';\n\n\nexport class ValidateDocMetadata {}\n\nexport function ValidateDoc() : PropertyDecorator {\n    return (target: Object, property: string | symbol) => {\n        pushPropertyMetadata(target.constructor, property, populate(new ValidateDocMetadata(), {\n        }))\n    }\n}\n","import { populate, pushPropertyMetadata } from '../utils/metadata';\n\n\nexport class ViewMetadata {}\n\nexport function View() : PropertyDecorator {\n    return (target: Object, property: string | symbol) => {\n        pushPropertyMetadata(target.constructor, property, populate(new ViewMetadata(), {\n        }))\n    }\n}\n","import { Metadata } from './metadata';\n\nexport interface HydrateOptions {\n    depth? : number;\n    circularCache? : { [ key : string ] : any };\n}\n\nexport abstract class Hydrator {\n    abstract hydrate<T>(entity : T, data : PouchDB.Core.Document<T> & PouchDB.Core.GetMeta, metadata : Metadata<T>, options? : HydrateOptions) : Promise<T>;\n    \n    abstract dehydrate<T>(entity : T, metadata : Metadata<T>, options? : { includeRev? : boolean }) : PouchDB.Core.Document<T> & Partial<PouchDB.Core.RevisionIdMeta>;\n}\n\n\n","import { Metadata } from './metadata';\n\nexport abstract class Validator {\n    abstract validate<T>(entity : T, _metadata : Metadata<T>) : Promise<true>;\n}\n","import { Ctor } from './utils/metadata';\nimport { InjectionToken } from '@angular/core';\nimport { Metadata } from './metadata';\n\n\nexport interface EqualChecker {\n    (a : any, b : any): boolean\n}\n\nexport interface ConnectionFactory<T extends {} = {}> {\n    (name : string): PouchDB.Database<T>\n}\n\nexport interface AdamantId {\n    head(name : string) : string;\n    tail(name : string) : string;\n    build(name : string, type : typeof String | typeof Number, id : string|number) : string;\n    parse(id : string) : { name: string, type: typeof String | typeof Number, id : string | number };\n}\n\nexport const ADAMANT_CONNECTION = new InjectionToken<PouchDB.Database>('ADAMANT_CONNECTION');\nexport const ADAMANT_ENTITY_CLASS = new InjectionToken<Ctor<any>>('ADAMANT_ENTITY_CLASS');\nexport const ADAMANT_ENTITY_METADATA = new InjectionToken<Metadata<any>>('ADAMANT_ENTITY_METADATA');\nexport const ADAMANT_EQUAL_CHECKER = new InjectionToken<EqualChecker>('ADAMANT_EQUAL_CHECKER');\nexport const ADAMANT_CONNECTION_FACTORY = new InjectionToken<ConnectionFactory>('ADAMANT_CONNECTION_FACTORY');\nexport const ADAMANT_ID = new InjectionToken<AdamantId>('ADAMANT_ID');\n","export function markDeleted<T extends {}>(entity : T) : T {\n    Object.defineProperty(entity, '_deleted', { configurable: true, value: true });\n    \n    return entity;\n}\n\nexport function markIdRev<T extends {}>(entity : T, res : { id? : string, rev? : string }) : T {\n    Object.defineProperty(entity, '_id', { configurable: true, value: res.id });\n    Object.defineProperty(entity, '_rev', { configurable: true, value: res.rev });\n    \n    return entity;\n}\n","import { Ctor, getAllPropertyMetadata, getClassMetadata } from './utils/metadata';\nimport { IdMetadata, IdStrategy } from './annotations/id';\nimport { PropertyMetadata } from './annotations/property';\nimport { EntityMetadata } from './annotations/entity';\nimport { Hydrator } from './hydrator';\nimport { Validator } from './validator';\nimport { BelongsToMetadata } from './annotations/belongs-to';\nimport { HasManyMetadata } from './annotations/has-many';\nimport { HasManyMapMetadata } from './annotations/has-many-map';\nimport { InlineMetadata } from './annotations/inline';\nimport { InlineEntityMetadata } from './annotations/inline-entity';\n\nexport class Metadata<T> {\n    readonly inline: boolean = false;\n    readonly name?: string;\n    readonly attachments?: boolean;\n    readonly hydrator!: Ctor<Hydrator>;\n    readonly validator!: Ctor<Validator>;\n    \n    readonly id! : keyof T;\n    readonly idType!: typeof String | typeof Number;\n    readonly idStrategy! : IdStrategy;\n    \n    readonly properties = new Map<string | symbol, PropertyMetadata|IdMetadata|BelongsToMetadata<any>|HasManyMetadata<any>|HasManyMapMetadata<any>|InlineMetadata<any>>();\n    // readonly belongsTo = new Map<string | symbol, BelongsToMetadata<any>>();\n    // readonly hasMany = new Map<string | symbol, HasManyMetadata<any>>();\n    // readonly hasManyMap = new Map<string | symbol, HasManyMapMetadata<any>>();\n    \n    constructor(protected readonly entity : Ctor<T>) {\n        this.parse();\n        this.assert();\n    }\n    \n    protected parse() {\n        const classMetadata = getClassMetadata<EntityMetadata | InlineEntityMetadata>(this.entity);\n        const propertyMetadata = getAllPropertyMetadata<IdMetadata>(this.entity);\n        \n        for(const annotation of classMetadata) {\n            if(annotation instanceof EntityMetadata || annotation instanceof InlineEntityMetadata) {\n                Object.assign(this, annotation);\n            }\n        }\n        \n        for(const [ property, annotations ] of propertyMetadata) {\n            for(const annotation of annotations) {\n                if(annotation instanceof IdMetadata) {\n                    (this as any).id = property;\n                    (this as any).idType = annotation.type;\n                    (this as any).idStrategy = annotation.strategy;\n                }\n                \n                // if(annotation instanceof BelongsToMetadata) {\n                //     this.belongsTo.set(property, annotation);\n                // }\n                //\n                // if(annotation instanceof HasManyMetadata) {\n                //     this.hasMany.set(property, annotation);\n                // }\n                //\n                // if(annotation instanceof HasManyMapMetadata) {\n                //     this.hasManyMap.set(property, annotation);\n                // }\n                \n                if(annotation instanceof PropertyMetadata) {\n                    this.properties.set(property, annotation);\n                }\n            }\n        }\n    }\n    \n    protected assert() {\n        for(const key of ((this.inline ? [] : [ 'id', 'idStrategy', 'name', 'attachments' ]) as (keyof Metadata<T>)[])) {\n            if(null == this[key]) {\n                throw new Error(`Missing metadata '${key}' for entity \"${this.entity.name}\"`);\n            }\n        }\n    }\n}\n","import { Hydrator } from './hydrator';\nimport { Validator } from './validator';\nimport { Ctor } from './utils/metadata';\nimport { ADAMANT_CONNECTION, ADAMANT_ENTITY_CLASS, ADAMANT_ENTITY_METADATA } from './injector-tokens';\nimport { Inject } from '@angular/core';\nimport { markDeleted, markIdRev } from './utils/marks';\nimport { Metadata } from './metadata';\n\nexport enum BulkOperation {\n    Create = 'create',\n    Update = 'update',\n    Delete = 'delete'\n}\n\nexport class Bulk<T> {\n    \n    constructor(@Inject(ADAMANT_CONNECTION) protected readonly db : PouchDB.Database<T>,\n                @Inject(ADAMANT_ENTITY_CLASS) protected readonly entityClass : Ctor<T>,\n                @Inject(ADAMANT_ENTITY_METADATA) protected readonly metadata : Metadata<T>,\n                protected readonly hydrator : Hydrator,\n                protected readonly validator : Validator) {}\n    \n    protected async bulk(entities : T[], operation : BulkOperation) : Promise<T[]> {\n        if(0 === entities.length) {\n            return entities;\n        }\n        \n        const docs = await Promise.all(entities.map(async entity => {\n            if(!(entity instanceof this.entityClass)) {\n                throw new Error(`Entity \"${entity}\" is not instanceof ${this.entityClass.name}`);\n            }\n    \n            await this.validator.validate(entity, this.metadata);\n    \n            const doc : PouchDB.Core.ChangesMeta & PouchDB.Core.Document<T> = this.hydrator.dehydrate(entity, this.metadata, { includeRev: operation === BulkOperation.Update || operation === BulkOperation.Delete });\n            if(operation === BulkOperation.Delete) {\n                doc._deleted = true;\n            }\n            return doc;\n        }));\n        \n        const result = await this.db.bulkDocs(docs);\n        const errors : PouchDB.Core.Error[] = result.filter(r => Object.prototype.hasOwnProperty.call(r, 'error'));\n        \n        if(0 < errors.length) {\n            throw errors;\n        }\n        \n        result.forEach((res, index) => {\n            if(operation === BulkOperation.Delete) {\n                markDeleted(entities[index]);\n            }\n            markIdRev(entities[index], res);\n        });\n        \n        return entities;\n    }\n    \n    create(entities : T[]) : Promise<T[]> {\n        return this.bulk(entities, BulkOperation.Create);\n    }\n    \n    update(entities : T[]) : Promise<T[]> {\n        return this.bulk(entities, BulkOperation.Update);\n    }\n    \n    delete(entities : T[]) : Promise<T[]> {\n        return this.bulk(entities, BulkOperation.Delete);\n    }\n}\n","export type Deffered<T> = Promise<T> & { resolve(v : T) : void, reject(e : any) : void };\n\nexport function defer<T>() : Deffered<T> {\n    let resolve : any , reject : any, promise = new Promise<T>((res, rej) => {\n        resolve = res;\n        reject = rej;\n    });\n    \n    return Object.assign(promise, { resolve, reject });\n}\n","import { defer, Deffered } from './utils/defer';\n\nexport class ReadQueryBatcher {\n    queue : string[] = [];\n    deffered? : Deffered<PouchDB.Core.Document<any>[]>;\n    \n    constructor(protected readonly db : PouchDB.Database) {}\n    \n    read<T>(keys : string[]) : Promise<PouchDB.Core.Document<T>[]> {\n        this.queue.push(...keys);\n        \n        return this.schedule<T>().then(docs => {\n            return keys\n                .map(key => docs.find(doc => doc._id === key))\n                .filter(Boolean)\n                .map(doc => JSON.parse(JSON.stringify(doc)));\n        });\n    }\n    \n    protected schedule<T>() : Deffered<PouchDB.Core.Document<T>[]> {\n        if(!this.deffered) {\n            setImmediate(() => {\n                this.execute();\n            });\n            this.deffered = defer();\n            this.deffered.then(() => {\n                delete this.deffered\n            }, () => {\n                delete this.deffered\n            });\n        }\n        \n        return this.deffered;\n    }\n    \n    protected async execute() {\n        const keys = this.queue.filter((v, i, a) => i === a.indexOf(v));\n        this.queue = [];\n        \n        try {\n            const { rows } = await this.db.allDocs({\n                include_docs: true,\n                keys\n            });\n            \n            this.deffered!.resolve(rows.map(r => r.doc).filter(Boolean));\n        } catch(e) {\n            this.deffered!.reject(e);\n        }\n    }\n}\n","import { AdamantRepository } from './repository';\nimport { HydrateOptions } from './hydrator';\n\nexport class QueryBuilder<T> {\n    \n    protected _selector : PouchDB.Find.Selector = {};\n    protected _sort : Array<string|{[propName: string]: 'asc' | 'desc'}> = [];\n    protected _limit? : number;\n    protected _skip? : number;\n    \n    constructor(protected readonly repository : AdamantRepository<T>, head : string, tail : string) {\n        this._selector._id = {\n            $gt: head,\n            $lt: tail\n        }\n    }\n    \n    selector(field : string, condition : PouchDB.Find.Selector | PouchDB.Find.ConditionOperators | string | number | boolean) : this;\n    selector(selector : PouchDB.Find.Selector) : this;\n    selector(fieldOrSelector : string|PouchDB.Find.Selector, condition? : PouchDB.Find.Selector | PouchDB.Find.ConditionOperators | string | number | boolean) : this {\n        if(typeof fieldOrSelector === 'string') {\n            if(typeof condition !== 'object') {\n                condition = {\n                    $eq: condition\n                }\n            }\n            if(fieldOrSelector in this._selector) {\n                \n                Object.assign(this._selector[ fieldOrSelector ], condition)\n            } else {\n                this._selector[ fieldOrSelector ] = condition;\n            }\n        } else {\n            for(let key in fieldOrSelector) {\n                this.selector(key, fieldOrSelector[key]);\n            }\n        }\n        return this;\n    }\n    \n    sort(property : string, direction? : 'asc' | 'desc') : this;\n    sort(sort : { [propName: string]: 'asc' | 'desc' }) : this;\n    sort(propertyOrSort : string|{ [propName: string]: 'asc' | 'desc' }, direction? : 'asc' | 'desc') : this {\n        if(typeof propertyOrSort === 'string' && direction) {\n            this._sort.push({ [propertyOrSort]: direction });\n        } else {\n            this._sort.push(propertyOrSort);\n        }\n        return this;\n    }\n    \n    limit(limit : number) : this {\n        this._limit = limit;\n        return this;\n    }\n    \n    skip(skip : number) : this {\n        this._skip = skip;\n        return this;\n    }\n    \n    resolve(options?: HydrateOptions) : Promise<T[]> {\n        return this.repository.executeQuery(this, options);\n    }\n    \n    toFindRequest() {\n        const req : PouchDB.Find.FindRequest<T> = {\n            selector: this._selector\n        };\n        \n        if(0 < this._sort.length) {\n            req.sort = this._sort;\n        }\n        \n        if(this._limit != null) {\n            req.limit = this._limit;\n        }\n        \n        if(this._skip != null) {\n            req.skip = this._skip;\n        }\n        \n        return req;\n    }\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { Validator } from './validator';\nimport { Ctor, getAllPropertyMetadata, getClassMetadata, getPropertyMetadata, populate } from './utils/metadata';\nimport { HydrateOptions, Hydrator } from './hydrator';\nimport { Metadata } from './metadata';\nimport { Bulk } from './bulk';\nimport { markDeleted, markIdRev } from './utils/marks';\nimport * as equal from 'fast-deep-equal';\nimport { ReadQueryBatcher } from './read-query-batcher';\nimport { QueryBuilder } from './query-builder';\nimport { DesignDocMetadata } from './annotations/design-doc';\nimport { ViewMetadata } from './annotations/view';\nimport { FilterMetadata } from './annotations/filter';\nimport { ValidateDocMetadata } from './annotations/validate-doc';\nimport {\n    ADAMANT_CONNECTION,\n    ADAMANT_ENTITY_CLASS,\n    ADAMANT_ENTITY_METADATA,\n    ADAMANT_EQUAL_CHECKER,\n    ADAMANT_ID,\n    AdamantId,\n    EqualChecker\n} from './injector-tokens';\n\n\nexport function equalCheckerFactory() {\n    return equal;\n}\n\n\n@Injectable()\nexport class AdamantRepository<T> {\n    protected readonly queryBatcher = new ReadQueryBatcher(this.db);\n    \n    constructor(@Inject(ADAMANT_CONNECTION) protected readonly db : PouchDB.Database<T>,\n                @Inject(ADAMANT_ENTITY_CLASS) protected readonly entityClass : Ctor<T>,\n                @Inject(ADAMANT_ENTITY_METADATA) protected readonly metadata : Metadata<T>,\n                @Inject(ADAMANT_EQUAL_CHECKER) protected readonly equal : EqualChecker,\n                @Inject(ADAMANT_ID) protected readonly id : AdamantId,\n                public readonly bulk : Bulk<T>,\n                public readonly hydrator : Hydrator,\n                public readonly validator : Validator) {\n    }\n    \n    async create(entity : T) : Promise<T> {\n        await this.validator.validate(entity, this.metadata);\n        \n        const doc = this.hydrator.dehydrate(entity, this.metadata);\n        \n        const result = await this.db.put(doc);\n        \n        markIdRev(entity, result);\n        \n        return entity;\n    }\n    \n    async upsert(entity : T) : Promise<T> {\n        await this.validator.validate(entity, this.metadata);\n        \n        const doc = this.hydrator.dehydrate(entity, this.metadata);\n        \n        const result = await this._upsert(this.id.build(this.metadata.name!, this.metadata.idType, entity[ this.metadata.id ] as any), doc);\n        \n        markIdRev(entity, result);\n        \n        return entity;\n    }\n    \n    /** @internal */\n    _upsert(id : string, document : PouchDB.Core.Document<T> & Partial<PouchDB.Core.RevisionIdMeta>) : Promise<PouchDB.UpsertResponse> {\n        return this.db.upsert(id, existingDoc => {\n            const { _id: _1, _rev: _2, ...d1 } = document as any;\n            const { _id: _3, _rev: _4, ...d2 } = existingDoc as any;\n            \n            if(this.equal(d1, d2)) {\n                return false;\n            }\n            \n            return document;\n        })\n    }\n    \n    async update(entity : T) : Promise<T> {\n        await this.validator.validate(entity, this.metadata);\n        \n        const doc = this.hydrator.dehydrate(entity, this.metadata, { includeRev: true });\n        \n        const result = await this.db.put(doc);\n        \n        markIdRev(entity, result);\n        \n        return entity;\n    }\n    \n    async delete(entity : T) : Promise<T> {\n        await this.validator.validate(entity, this.metadata);\n        \n        const doc : PouchDB.Core.Document<T> & Partial<PouchDB.Core.RevisionIdMeta> & PouchDB.Core.ChangesMeta = this.hydrator.dehydrate(entity, this.metadata, { includeRev: true });\n        \n        doc._deleted = true;\n        \n        const result = await this.db.put(doc);\n        \n        markIdRev(entity, result);\n        markDeleted(entity);\n        \n        return entity;\n    }\n    \n    read(id : number | string, options? : HydrateOptions) {\n        return this._read(this.id.build(this.metadata.name!, this.metadata.idType, id), options);\n    }\n    \n    /** @internal */\n    async _read(id : string, options? : HydrateOptions) {\n        return this.hydrator.hydrate(Object.create(this.entityClass.prototype), await this._readRaw(id), this.metadata, options);\n    }\n    \n    /** @internal */\n    async _readRaw(id : string) : Promise<PouchDB.Core.Document<T>> {\n        const result = await this.queryBatcher.read<T>([ id ]);\n        if(!result[ 0 ]) {\n            throw {\n                status : 404,\n                name   : 'not_found',\n                message: 'missing',\n                reason : 'missing',\n                id\n            }\n        }\n        \n        return result[ 0 ];\n    }\n    \n    async readAll(ids? : (string | number)[], options? : HydrateOptions) {\n        const opt : PouchDB.Core.AllDocsWithKeysOptions & PouchDB.Core.AllDocsWithinRangeOptions = {\n            include_docs: true\n        } as any;\n        \n        if(ids) {\n            opt.keys = ids.map(id => this.id.build(this.metadata.name!, this.metadata.idType, id)).sort((a, b) => a.localeCompare(b));\n        } else {\n            opt.startkey = this.id.head(this.metadata.name!);\n            opt.endkey = this.id.tail(this.metadata.name!);\n        }\n        \n        return this._readAll(opt, options);\n    }\n    \n    /** @internal */\n    async _readAll(opt : PouchDB.Core.AllDocsWithKeysOptions | PouchDB.Core.AllDocsWithinRangeOptions, options? : HydrateOptions) {\n        return await Promise.all((await this._readAllRaw(opt))\n            .map(async doc => this.hydrator.hydrate(Object.create(this.entityClass.prototype), doc, this.metadata, options))\n        )\n    }\n    \n    /** @internal */\n    async _readAllRaw(opt : PouchDB.Core.AllDocsWithKeysOptions | PouchDB.Core.AllDocsWithinRangeOptions) : Promise<PouchDB.Core.Document<T>[]> {\n        if(opt.include_docs && 'keys' in opt) {\n            return await this.queryBatcher.read<T>(opt.keys);\n        }\n        \n        return (await this.db.allDocs<T>(opt)).rows.map(r => r.doc!).filter(Boolean);\n    }\n    \n    query() : QueryBuilder<T> {\n        return new QueryBuilder<T>(this, this.id.head(this.metadata.name!), this.id.tail(this.metadata.name!));\n    }\n    \n    async executeQuery(query : QueryBuilder<T>, options? : HydrateOptions) {\n        return await Promise.all((await this.db.find(query.toFindRequest())).docs\n            .map(async doc => this.hydrator.hydrate(Object.create(this.entityClass.prototype), doc, this.metadata, options))\n        )\n    }\n    \n    build(props : Partial<T> = {}) : T {\n        return populate(Object.create(this.entityClass.prototype), props);\n    }\n    \n    async persistDesignDoc<T extends {}>(doc : T) : Promise<void> {\n        const classAnnotations = getClassMetadata(doc.constructor, DesignDocMetadata);\n        const propertyAnnotations = getAllPropertyMetadata<ViewMetadata | FilterMetadata | ValidateDocMetadata>(doc.constructor);\n        \n        if(1 !== classAnnotations.length) {\n            throw new Error(`Design doc annotation required`);\n        }\n        \n        if(classAnnotations[ 0 ].entity !== this.entityClass) {\n            throw new Error(`Invalid design doc entity`);\n        }\n        \n        let document : {\n            _id : string;\n            views : { [ key : string ] : { map : string, reduce? : string } };\n            filters : { [ key : string ] : string };\n            validate_doc_update? : string;\n        } = {\n            _id    : `_design/${classAnnotations[ 0 ].name}`,\n            views  : {},\n            filters: {}\n        };\n        \n        for(const [ property, annotations ] of propertyAnnotations) {\n            for(const annotation of annotations) {\n                if(annotation instanceof ViewMetadata) {\n                    const value : any = doc[ property as keyof T ];\n                    const type = typeof value;\n                    \n                    if(type === 'string' || type === 'function') {\n                        document.views[ property as string ] = {\n                            map: value.toString()\n                        };\n                    } else if(type === 'object') {\n                        document.views[ property as string ] = {\n                            map   : value.map.toString(),\n                            reduce: value.reduce && value.reduce.toString()\n                        };\n                    }\n                } else if(annotation instanceof FilterMetadata) {\n                    document.filters[ property as string ] = doc[ property as keyof T ].toString();\n                } else if(annotation instanceof ValidateDocMetadata) {\n                    document.validate_doc_update = doc[ property as keyof T ].toString();\n                }\n            }\n        }\n        \n        await this.db.upsert<any>(document._id, existingDoc => {\n            const { _id: _1, _rev: _2, ...d1 } = document as any;\n            const { _id: _3, _rev: _4, ...d2 } = existingDoc as any;\n            \n            if(this.equal(d1, d2)) {\n                return false;\n            }\n            \n            return document;\n        });\n    }\n    \n    async view<T, P extends keyof T>(designDoc : Ctor<T>, name : P, { depth, circularCache, ...options } : HydrateOptions & PouchDB.Query.Options<T, any> = {}) {\n        const classAnnotation = getClassMetadata(designDoc, DesignDocMetadata)[ 0 ];\n        \n        if(!classAnnotation) {\n            throw new Error(`Design doc annotation required`);\n        }\n        \n        if(classAnnotation.entity !== this.entityClass) {\n            throw new Error(`Invalid design doc entity`);\n        }\n        \n        const propertyAnnotation = getPropertyMetadata(designDoc, name as string, ViewMetadata);\n        \n        if(!propertyAnnotation) {\n            throw new Error(`Unknown view \"${name}\"`);\n        }\n        \n        if(!options) {\n            options = {}\n        }\n        options.include_docs = true;\n        \n        return await Promise.all((await this.rawView(`${classAnnotation.name}/${name}`, options))\n            .rows.map(row => row.doc!)\n            .map(async doc => this.hydrator.hydrate(Object.create(this.entityClass.prototype), doc, this.metadata, {\n                depth,\n                circularCache\n            }))\n        )\n    }\n    \n    rawView<R = T>(name : string, options? : PouchDB.Query.Options<R, any>) {\n        return this.db.query(name, options);\n    }\n}\n","import { PropertyMetadata, Type } from './annotations/property';\nimport { InlineMetadata } from './annotations/inline';\nimport { HasManyMapMetadata } from './annotations/has-many-map';\nimport { markIdRev } from './utils/marks';\nimport { HydrateOptions, Hydrator } from './hydrator';\nimport { AdamantRepository } from './repository';\nimport { RelationMetadata } from './annotations/relation';\nimport { AdamantConnectionManager } from './connection-manager';\nimport { HasManyMetadata } from './annotations/has-many';\nimport { Metadata } from './metadata';\nimport { BelongsToMetadata } from './annotations/belongs-to';\nimport { IdMetadata } from './annotations/id';\nimport { Inject, Injectable } from '@angular/core';\nimport { ADAMANT_ID, AdamantId } from './injector-tokens';\n\n@Injectable()\nexport class HydratorImpl extends Hydrator {\n    constructor(@Inject(ADAMANT_ID) protected readonly id : AdamantId,\n                protected readonly connectionManager : AdamantConnectionManager) {\n        super();\n    }\n    \n    dehydrate<T>(entity : T, metadata : Metadata<T>, options? : { includeRev? : boolean }) : PouchDB.Core.Document<T> & Partial<PouchDB.Core.RevisionIdMeta> {\n        const doc : any = {};\n        \n        if(options && options.includeRev) {\n            doc._rev = (entity as any)._rev;\n        }\n        \n        if(metadata.attachments && (entity as any)._attachments) {\n            doc._attachments = (entity as any)._attachments;\n        }\n        \n        for(const [ property, annotation ] of metadata.properties) {\n            const value : any = entity[ property as keyof T ];\n            if(annotation instanceof RelationMetadata) {\n                if(value != null) {\n                    const relationMetadata = this.connectionManager.getMetadata(annotation.type);\n                    \n                    if(annotation instanceof BelongsToMetadata) {\n                        doc[ property ] = relationToId(value, relationMetadata, this.id);\n                    } else if(annotation instanceof HasManyMetadata) {\n                        doc[ property ] = (value as any[]).map(rel => relationToId(rel, relationMetadata, this.id));\n                    } else if(annotation instanceof HasManyMapMetadata) {\n                        const rel : any = {};\n                        for(const key in value) {\n                            rel[ key ] = relationToId(value[ key ], relationMetadata, this.id);\n                        }\n                        doc[ property ] = rel;\n                    } else if(annotation instanceof InlineMetadata) {\n                        doc[ property ] = this.connectionManager.getRepository(annotation.type).hydrator.dehydrate(value, relationMetadata);\n                    }\n                }\n            } else if(annotation instanceof PropertyMetadata) {\n                doc[ property ] = value;\n                \n                if(annotation instanceof IdMetadata) {\n                    doc._id = this.id.build(metadata.name!, metadata.idType, value as any);\n                }\n            }\n            \n            if(undefined === doc[ property ]) {\n                delete doc[ property ];\n            }\n        }\n        \n        return doc as PouchDB.Core.Document<T> & Partial<PouchDB.Core.RevisionIdMeta>;\n    }\n    \n    async hydrate<T extends {}>(entity : T, data : PouchDB.Core.Document<T> & PouchDB.Core.GetMeta, metadata : Metadata<T>, { depth = Infinity, circularCache = {} } : HydrateOptions = {}) : Promise<T> {\n        if(data._id in circularCache) {\n            return circularCache[ data._id ];\n        }\n        \n        circularCache[ data._id ] = entity;\n        \n        markIdRev(entity, { id: data._id, rev: data._rev });\n        \n        if(metadata.attachments) {\n            Object.defineProperty(entity, '_attachments', { configurable: true, value: data._attachments });\n        }\n        \n        for(const [ property, annotation ] of metadata.properties) {\n            const value : any = data[ property as keyof T ];\n            if(null == value) {\n                entity[ property as keyof T ] = null!;\n            } else {\n                if(annotation instanceof RelationMetadata) {\n                    const relationMetadata = this.connectionManager.getMetadata(annotation.type);\n                    const relationRepository = this.connectionManager.getRepository(annotation.type);\n                    \n                    if(annotation instanceof BelongsToMetadata) {\n                        entity[ property as keyof T ] = circularCache.hasOwnProperty(value) ? circularCache[value] : await relationRepository\n                            ._read(value, {\n                                depth: depth - 1,\n                                circularCache\n                            });\n                    } else if(annotation instanceof HasManyMetadata) {\n                        entity[ property as keyof T ] = await readAllWithCircularCache(relationRepository, value, depth - 1, circularCache) as any;\n                        \n                    } else if(annotation instanceof HasManyMapMetadata) {\n                        const keys = Object.keys(value);\n                        const values = keys.map(k => value[ k ]);\n                        \n                        const entities = await readAllWithCircularCache(relationRepository, values, depth - 1, circularCache);\n                        const rel : any = {};\n                        for(const key of keys) {\n                            rel[ key ] = entities.find(e => e._id === value[ key ]);\n                        }\n                        entity[ property as keyof T ] = rel;\n                    } else if(annotation instanceof InlineMetadata) {\n                        entity[ property as keyof T ] = await relationRepository\n                            .hydrator.hydrate(relationRepository.build(), value, relationMetadata)\n                    }\n                } else if(annotation instanceof PropertyMetadata) {\n                    const descriptor = Object.getOwnPropertyDescriptor(Object.getPrototypeOf(entity), property);\n                    if(!descriptor || descriptor.writable || descriptor.set) {\n                        entity[ property as keyof T ] = unpack(value, annotation.type);\n                    }\n                }\n            }\n        }\n        \n        return entity;\n    }\n}\n\nasync function readAllWithCircularCache<T>(repo : AdamantRepository<T>, keys : string[], depth : number, circularCache : { [ key : string ] : any }) : Promise<T[]> {\n    const filteredKeys = keys.filter(k => !circularCache.hasOwnProperty(k));\n    let fromDb : T[];\n    \n    if(filteredKeys.length) {\n        fromDb = await repo._readAll({ keys: filteredKeys, include_docs: true }, { depth, circularCache });\n    }\n    \n    return keys.map(key => {\n        if(circularCache.hasOwnProperty(key)) {\n            return circularCache[key];\n        }\n        \n        return fromDb && fromDb.find(e => (e as any)._id === key);\n    })\n}\n\nfunction relationToId<T>(rel : string | T, metadata : Metadata<T>, id : AdamantId) : string {\n    return typeof rel === 'string'\n        ? rel\n        : id.build(metadata.name!, metadata.idType, rel[ metadata.id ] as any)\n}\n\nfunction unpack(value : any, type : Type) : any {\n    if(type === Date && value) {\n        return new Date(value);\n    }\n    \n    return value;\n}\n","import { Validator } from './validator';\nimport { Metadata } from './metadata';\n\nexport class ValidatorImpl extends Validator {\n    async validate<T>(entity : T, metadata : Metadata<T>) : Promise<true> {\n        for(const [ property, annotation ] of metadata.properties) {\n            await annotation.validate(entity[property as keyof T], property);\n        }\n        \n        return true;\n    }\n    \n}\n","import { Inject, Injectable, Injector } from '@angular/core';\nimport {\n    AdamantRepository, equalCheckerFactory\n} from './repository';\nimport { Ctor } from './utils/metadata';\nimport { Metadata } from './metadata';\nimport { Bulk } from './bulk';\nimport { Hydrator } from './hydrator';\nimport { Validator } from './validator';\nimport { HydratorImpl } from './hydrator-impl';\nimport { ValidatorImpl } from './validator-impl';\nimport {\n    ADAMANT_CONNECTION,\n    ADAMANT_CONNECTION_FACTORY, ADAMANT_ENTITY_CLASS, ADAMANT_ENTITY_METADATA,\n    ADAMANT_EQUAL_CHECKER,\n    ADAMANT_ID,\n    AdamantId,\n    ConnectionFactory\n} from './injector-tokens';\n\n\n\nexport function adamantIdFactory() : AdamantId {\n    return {\n        head(name : string) {\n            return `${name}_0`\n        },\n        tail(name : string) {\n            return `${name}_9`\n        },\n        build(name : string, type : typeof String | typeof Number, id : string|number) : string {\n            if(type === String) {\n                return `${name}_2_${id}`;\n            } else if(type === Number) {\n                const idStr = id.toString();\n                return `${name}_1_${'0'.repeat(16 - idStr.length)}${idStr}`;\n            }\n            throw new Error(`Invalid id type \"${type}\"`);\n        },\n        parse(id : string) : { name: string, type: typeof String | typeof Number, id : string | number } {\n            const match = /^(.*)_(1|2)_(.*)$/.exec(id);\n            \n            if(!match) {\n                throw new TypeError(`Invalid id \"${id}\"`);\n            }\n            \n            return {\n                name: match[1]!,\n                type: match[2] === '2' ? String : Number,\n                id: match[2] === '2' ? match[3] : Number.parseInt(match[3], 10)\n            };\n        }\n    }\n}\n\n\nexport function createAdamantConnection(factory : ConnectionFactory) : AdamantConnectionManager {\n    const injector = Injector.create({\n        providers: [\n            { provide: ADAMANT_CONNECTION_FACTORY, useValue: factory },\n            { provide: AdamantConnectionManager, deps: [ ADAMANT_CONNECTION_FACTORY, ADAMANT_ID, Injector ] },\n            { provide: ADAMANT_ID, useFactory: adamantIdFactory, deps: [] },\n            { provide: ADAMANT_EQUAL_CHECKER, useFactory: equalCheckerFactory, deps: [] }\n        ]\n    });\n\n    return injector.get(AdamantConnectionManager);\n}\n\n@Injectable()\nexport class AdamantConnectionManager {\n    \n    protected readonly connections = new Map<string, PouchDB.Database<any>>();\n    protected readonly repositories = new Map<Ctor<any>, AdamantRepository<any>>();\n    protected readonly metadata = new Map<Ctor<any>, Metadata<any>>();\n    \n    constructor(@Inject(ADAMANT_CONNECTION_FACTORY) protected readonly connectionFactory : ConnectionFactory,\n                @Inject(ADAMANT_ID) public readonly id : AdamantId,\n                protected readonly injector : Injector) {}\n    \n    getOpenConnections() : PouchDB.Database[] {\n        return Array.from(this.connections.values());\n    }\n    \n    getConnection<T extends {} = {}>(name : string) : PouchDB.Database<T> {\n        if(!this.connections.has(name)) {\n            this.connections.set(name, this.createConnection(name));\n        }\n        \n        return this.connections.get(name)!;\n    }\n    \n    clearConnections() {\n        this.connections.clear();\n    }\n    \n    protected createConnection(name : string) : PouchDB.Database {\n        return this.connectionFactory(name);\n    }\n    \n    getRepository<T>(entityClass : Ctor<T>) : AdamantRepository<T> {\n        if(!this.repositories.has(entityClass)) {\n            this.repositories.set(entityClass, this.createRepository(entityClass));\n        }\n        \n        return this.repositories.get(entityClass)!;\n    }\n    \n    protected createRepository<T>(entityClass : Ctor<T>) : AdamantRepository<T> {\n        const metadata = this.getMetadata(entityClass);\n        \n        return Injector.create({\n            parent: this.injector,\n            providers: [\n                { provide: AdamantConnectionManager, useValue: this },\n                { provide: AdamantRepository, deps: [ ADAMANT_CONNECTION, ADAMANT_ENTITY_CLASS, ADAMANT_ENTITY_METADATA, ADAMANT_EQUAL_CHECKER, ADAMANT_ID, Bulk, Hydrator, Validator] },\n                { provide: ADAMANT_ENTITY_CLASS, useValue: entityClass },\n                { provide: ADAMANT_ENTITY_METADATA, useValue: metadata, },\n                { provide: ADAMANT_CONNECTION, useValue: !metadata.inline ? this.getConnection(metadata.name!) : null },\n                { provide: HydratorImpl, deps: [ ADAMANT_ID, AdamantConnectionManager] },\n                { provide: ValidatorImpl, deps: [] },\n                { provide: Hydrator, useExisting: metadata.hydrator || HydratorImpl },\n                { provide: Validator, useExisting: metadata.validator || ValidatorImpl },\n                { provide: Bulk, deps: [ ADAMANT_CONNECTION, ADAMANT_ENTITY_CLASS, ADAMANT_ENTITY_METADATA, Hydrator, Validator ] }\n            ]\n        }).get<AdamantRepository<T>>(AdamantRepository);\n    }\n    \n    getMetadata<T>(entityClass : Ctor<T>) : Metadata<T> {\n        if(!this.metadata.has(entityClass)) {\n            this.metadata.set(entityClass, this.createMetadata(entityClass));\n        }\n        \n        return this.metadata.get(entityClass)!;\n    }\n    \n    protected createMetadata<T>(entityClass : Ctor<T>) : Metadata<T> {\n        return new Metadata<T>(entityClass);\n    }\n}\n"],"names":["tslib_1.__extends","resolveForwardRef","InjectionToken","tslib_1.__values","Inject","equal","Injectable","Injector"],"mappings":"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"}
