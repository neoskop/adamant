/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import 'reflect-metadata';
/** @typedef {?} */
var Ctor;
export { Ctor };
/** @type {?} */
export var CLASS_METADATA = new WeakMap();
/** @type {?} */
export var PROPERTY_METADATA = new WeakMap();
/**
 * @template T
 * @param {?} target
 * @param {?=} type
 * @return {?}
 */
export function getClassMetadata(target, type) {
    if (!CLASS_METADATA.has(target)) {
        return [];
    }
    return /** @type {?} */ ((CLASS_METADATA.get(target))).filter(function (a) { return !type || a instanceof type; });
}
/**
 * @param {?} target
 * @param {?} metadata
 * @return {?}
 */
export function pushClassMetadata(target, metadata) {
    if (!CLASS_METADATA.has(target)) {
        CLASS_METADATA.set(target, []);
    } /** @type {?} */
    ((CLASS_METADATA.get(target))).push(metadata);
}
/**
 * @template T
 * @param {?} target
 * @param {?} property
 * @param {?=} type
 * @return {?}
 */
export function getPropertyMetadata(target, property, type) {
    if (!PROPERTY_METADATA.has(target) || !/** @type {?} */ ((PROPERTY_METADATA.get(target))).has(property)) {
        return [];
    }
    return /** @type {?} */ ((/** @type {?} */ ((PROPERTY_METADATA.get(target))).get(property))).filter(function (a) { return !type || a instanceof type; });
}
/**
 * @template T
 * @param {?} target
 * @return {?}
 */
export function getAllPropertyMetadata(target) {
    if (!PROPERTY_METADATA.has(target)) {
        return new Map();
    }
    return /** @type {?} */ ((PROPERTY_METADATA.get(target)));
}
/**
 * @param {?} target
 * @param {?} property
 * @param {?} metadata
 * @return {?}
 */
export function pushPropertyMetadata(target, property, metadata) {
    if (!PROPERTY_METADATA.has(target)) {
        PROPERTY_METADATA.set(target, new Map());
    }
    if (!/** @type {?} */ ((PROPERTY_METADATA.get(target))).has(property)) {
        /** @type {?} */ ((PROPERTY_METADATA.get(target))).set(property, []);
    } /** @type {?} */
    ((/** @type {?} */ ((PROPERTY_METADATA.get(target))).get(property))).push(metadata);
}
/**
 * @template T
 * @param {?} target
 * @param {?} source
 * @return {?}
 */
export function populate(target, source) {
    var e_1, _a;
    try {
        for (var _b = tslib_1.__values(/** @type {?} */ (Object.keys(source))), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            target[key] = /** @type {?} */ (source[key]);
        }
    }
    catch (e_1_1) { e_1 = { error: e_1_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_1) throw e_1.error; }
    }
    return target;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWV0YWRhdGEuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AbmVvc2tvcC9hZGFtYW50LyIsInNvdXJjZXMiOlsidXRpbHMvbWV0YWRhdGEudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLGtCQUFrQixDQUFDOzs7OztBQUkxQixXQUFhLGNBQWMsR0FBRyxJQUFJLE9BQU8sRUFBb0IsQ0FBQzs7QUFDOUQsV0FBYSxpQkFBaUIsR0FBRyxJQUFJLE9BQU8sRUFBd0MsQ0FBQzs7Ozs7OztBQUVyRixNQUFNLDJCQUFvQyxNQUFrQixFQUFFLElBQWU7SUFDekUsSUFBRyxDQUFDLGNBQWMsQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLEVBQUU7UUFDNUIsT0FBTyxFQUFFLENBQUM7S0FDYjtJQUVELDBCQUFPLGNBQWMsQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLEdBQUUsTUFBTSxDQUFDLFVBQUEsQ0FBQyxJQUFJLE9BQUEsQ0FBQyxJQUFJLElBQUksQ0FBQyxZQUFZLElBQUksRUFBMUIsQ0FBMEIsRUFBRTtDQUM5RTs7Ozs7O0FBRUQsTUFBTSw0QkFBNEIsTUFBa0IsRUFBRSxRQUFjO0lBQ2hFLElBQUcsQ0FBQyxjQUFjLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxFQUFFO1FBQzVCLGNBQWMsQ0FBQyxHQUFHLENBQUMsTUFBTSxFQUFFLEVBQUUsQ0FBQyxDQUFDO0tBQ2xDO01BQ0QsY0FBYyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsR0FBRSxJQUFJLENBQUMsUUFBUTtDQUM1Qzs7Ozs7Ozs7QUFFRCxNQUFNLDhCQUF1QyxNQUFZLEVBQUUsUUFBeUIsRUFBRSxJQUFpQjtJQUNuRyxJQUFHLENBQUMsaUJBQWlCLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxJQUFJLG9CQUFDLGlCQUFpQixDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsR0FBRSxHQUFHLENBQUMsUUFBUSxDQUFDLEVBQUU7UUFDaEYsT0FBTyxFQUFFLENBQUM7S0FDYjtJQUVELDZDQUFPLGlCQUFpQixDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsR0FBRSxHQUFHLENBQUMsUUFBUSxJQUFHLE1BQU0sQ0FBQyxVQUFBLENBQUMsSUFBSSxPQUFBLENBQUMsSUFBSSxJQUFJLENBQUMsWUFBWSxJQUFJLEVBQTFCLENBQTBCLEVBQUU7Q0FDaEc7Ozs7OztBQUVELE1BQU0saUNBQTBDLE1BQVk7SUFDeEQsSUFBRyxDQUFDLGlCQUFpQixDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsRUFBRTtRQUMvQixPQUFPLElBQUksR0FBRyxFQUFFLENBQUM7S0FDcEI7SUFFRCwwQkFBTyxpQkFBaUIsQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLEdBQUU7Q0FDekM7Ozs7Ozs7QUFFRCxNQUFNLCtCQUErQixNQUFZLEVBQUUsUUFBMEIsRUFBRSxRQUFjO0lBQ3pGLElBQUcsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLEVBQUU7UUFDL0IsaUJBQWlCLENBQUMsR0FBRyxDQUFDLE1BQU0sRUFBRSxJQUFJLEdBQUcsRUFBRSxDQUFDLENBQUM7S0FDNUM7SUFFRCxJQUFHLG9CQUFDLGlCQUFpQixDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsR0FBRSxHQUFHLENBQUMsUUFBUSxDQUFDLEVBQUU7MkJBQzlDLGlCQUFpQixDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsR0FBRSxHQUFHLENBQUMsUUFBUSxFQUFFLEVBQUU7S0FDbEQ7eUJBRUQsaUJBQWlCLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxHQUFFLEdBQUcsQ0FBQyxRQUFRLElBQUcsSUFBSSxDQUFDLFFBQVE7Q0FDOUQ7Ozs7Ozs7QUFFRCxNQUFNLG1CQUFzQixNQUFVLEVBQUUsTUFBbUI7OztRQUN2RCxpREFBaUIsTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQWdCLDhDQUFFO1lBQWpELElBQU0sR0FBRyxXQUFBO1lBQ1QsTUFBTSxDQUFDLEdBQUcsQ0FBQyxxQkFBRyxNQUFNLENBQUMsR0FBRyxDQUFlLENBQUEsQ0FBQztTQUMzQzs7Ozs7Ozs7O0lBRUQsT0FBTyxNQUFNLENBQUM7Q0FDakIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJ3JlZmxlY3QtbWV0YWRhdGEnO1xuXG5leHBvcnQgdHlwZSBDdG9yPFQ+ID0gRnVuY3Rpb24gfCB7IG5ldyguLi5hcmdzIDogYW55W10pIDogVDsgcHJvdG90eXBlOiBUIH07XG5cbmV4cG9ydCBjb25zdCBDTEFTU19NRVRBREFUQSA9IG5ldyBXZWFrTWFwPEN0b3I8YW55PiwgYW55W10+KCk7XG5leHBvcnQgY29uc3QgUFJPUEVSVFlfTUVUQURBVEEgPSBuZXcgV2Vha01hcDxDdG9yPGFueT4sIE1hcDxzdHJpbmd8c3ltYm9sLCBhbnlbXT4+KCk7XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRDbGFzc01ldGFkYXRhPFQgPSBhbnk+KHRhcmdldCA6IEN0b3I8YW55PiwgdHlwZT8gOiBDdG9yPFQ+KSA6IFRbXSB7XG4gICAgaWYoIUNMQVNTX01FVEFEQVRBLmhhcyh0YXJnZXQpKSB7XG4gICAgICAgIHJldHVybiBbXTtcbiAgICB9XG4gICAgXG4gICAgcmV0dXJuIENMQVNTX01FVEFEQVRBLmdldCh0YXJnZXQpIS5maWx0ZXIoYSA9PiAhdHlwZSB8fCBhIGluc3RhbmNlb2YgdHlwZSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBwdXNoQ2xhc3NNZXRhZGF0YSh0YXJnZXQgOiBDdG9yPGFueT4sIG1ldGFkYXRhIDogYW55KSB7XG4gICAgaWYoIUNMQVNTX01FVEFEQVRBLmhhcyh0YXJnZXQpKSB7XG4gICAgICAgIENMQVNTX01FVEFEQVRBLnNldCh0YXJnZXQsIFtdKTtcbiAgICB9XG4gICAgQ0xBU1NfTUVUQURBVEEuZ2V0KHRhcmdldCkhLnB1c2gobWV0YWRhdGEpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0UHJvcGVydHlNZXRhZGF0YTxUID0gYW55Pih0YXJnZXQgOiBhbnksIHByb3BlcnR5OiBzdHJpbmcgfCBzeW1ib2wsIHR5cGU/IDogQ3Rvcjxhbnk+KSA6IFRbXSB7XG4gICAgaWYoIVBST1BFUlRZX01FVEFEQVRBLmhhcyh0YXJnZXQpIHx8ICFQUk9QRVJUWV9NRVRBREFUQS5nZXQodGFyZ2V0KSEuaGFzKHByb3BlcnR5KSkge1xuICAgICAgICByZXR1cm4gW107XG4gICAgfVxuICAgIFxuICAgIHJldHVybiBQUk9QRVJUWV9NRVRBREFUQS5nZXQodGFyZ2V0KSEuZ2V0KHByb3BlcnR5KSEuZmlsdGVyKGEgPT4gIXR5cGUgfHwgYSBpbnN0YW5jZW9mIHR5cGUpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0QWxsUHJvcGVydHlNZXRhZGF0YTxUID0gYW55Pih0YXJnZXQgOiBhbnkpIDogTWFwPHN0cmluZ3xzeW1ib2wsIFRbXT4ge1xuICAgIGlmKCFQUk9QRVJUWV9NRVRBREFUQS5oYXModGFyZ2V0KSkge1xuICAgICAgICByZXR1cm4gbmV3IE1hcCgpO1xuICAgIH1cbiAgICBcbiAgICByZXR1cm4gUFJPUEVSVFlfTUVUQURBVEEuZ2V0KHRhcmdldCkhO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcHVzaFByb3BlcnR5TWV0YWRhdGEodGFyZ2V0IDogYW55LCBwcm9wZXJ0eSA6IHN0cmluZyB8IHN5bWJvbCwgbWV0YWRhdGEgOiBhbnkpIHtcbiAgICBpZighUFJPUEVSVFlfTUVUQURBVEEuaGFzKHRhcmdldCkpIHtcbiAgICAgICAgUFJPUEVSVFlfTUVUQURBVEEuc2V0KHRhcmdldCwgbmV3IE1hcCgpKTtcbiAgICB9XG4gICAgXG4gICAgaWYoIVBST1BFUlRZX01FVEFEQVRBLmdldCh0YXJnZXQpIS5oYXMocHJvcGVydHkpKSB7XG4gICAgICAgIFBST1BFUlRZX01FVEFEQVRBLmdldCh0YXJnZXQpIS5zZXQocHJvcGVydHksIFtdKTtcbiAgICB9XG4gICAgXG4gICAgUFJPUEVSVFlfTUVUQURBVEEuZ2V0KHRhcmdldCkhLmdldChwcm9wZXJ0eSkhLnB1c2gobWV0YWRhdGEpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcG9wdWxhdGU8VD4odGFyZ2V0IDogVCwgc291cmNlIDogUGFydGlhbDxUPikgOiBUIHtcbiAgICBmb3IoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKHNvdXJjZSkgYXMgKGtleW9mIFQpW10pIHtcbiAgICAgICAgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XSBhcyBUW2tleW9mIFRdO1xuICAgIH1cbiAgICBcbiAgICByZXR1cm4gdGFyZ2V0O1xufVxuIl19